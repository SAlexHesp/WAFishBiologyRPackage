% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WA_biology_methods.R
\name{GetSchnuteGrowthResults}
\alias{GetSchnuteGrowthResults}
\title{Get outputs from a fitted Schnute growth curve.}
\usage{
GetSchnuteGrowthResults(
  params,
  nSexes,
  DataType,
  t1,
  t2,
  ObsAge,
  ObsLen,
  ObsMeanLen,
  ObsMeanLensd
)
}
\arguments{
\item{params}{c(log(y1),log(y2),a,b) Schnute parameters}

\item{nSexes}{number of sexes}

\item{DataType}{1=lengths at age data for individual fish, 2=mean length at age and sd data from mixture analysis}

\item{t1}{first reference age}

\item{t2}{second reference age}

\item{ObsAge}{observed ages}

\item{ObsLen}{observed lengths}

\item{ObsMeanLen}{mean lengths for specified ages (i.e. as estimated from mixture analysis)}

\item{ObsMeanLensd}{sd for mean estimated mean lengths for specified ages (i.e. as estimated from mixture analysis)}
}
\value{
negative log-likelihood (nll), nlminb convergence diagnostic (convergence),
sample size (SampleSize), growth parameter estimates with lower and upper 95 percent confidence limits
(ParamEst), point estimates for growth parameters (params), variance-covariance matrix (vcov.params)
}
\description{
This function fits a Schnute growth curve to a sample of fish length-at-age data
by minimising the negative log-likelihood associated with the parameters and data,
using nlminb. It provides various statistical outputs in include convergence statistics,
parameter estimated and associated 95 percent confidence limits and associated variance-covariance matrix,
calculated using the MASS package.
}
\examples{
# Schnute growth equation
# simulate data (ignoring mortality and selectivity effects)
GrowthEqn = 2 # Schnute growth equation
nSexes = 1 # single or combined sex
nSamples = 500
MinAge = 0
MaxAge = 20
Agestep = 1
ObsAge = runif(nSamples, MinAge, MaxAge)
Ref_ages = c(0.5,15)
Growth_params = c(100,400,0.02,3)
Growth_cv = 0.1
Res=SimulateLengthAtAgeData(GrowthEqn, nSamples, nSexes, MinAge, MaxAge, AgeStep, Ref_ages, Growth_params, Growth_cv)
# fit growth model
ObsAge=Res$ObsAge
ObsLen=Res$ObsLen
DataType=1  # 1=lengths at age data for individual fish, 2=mean length at age and sd data from mixture analysis
params = c(log(150),log(420),0.05,2)
t1=0.5
t2=15
ObsMeanLen=NA
ObsMeanLensd=NA
FittedRes=GetSchnuteGrowthResults(params, nSexes, DataType, t1, t2, ObsAge, ObsLen, ObsMeanLen=NA, ObsMeanLensd=NA)
# DataType=2  # 1=lengths at age data for individual fish, 2=mean length at age and sd data from mixture analysis
# params = c(log(110),log(420),0.05,2)
# t1=0.5
# t2=15
# ObsAge=Res$ObsAgeCl
# ObsMeanLen=Res$ObsMeanLen
# ObsMeanLensd=Res$ObsMeanLensd
# FittedRes=GetSchnuteGrowthResults(params, nSexes, DataType, t1, t2, ObsAge, ObsLen=NA, ObsMeanLen, ObsMeanLensd)
# GrowthEqn = 2 # Schnute equation
# nSexes = 2 # separate sexes
# nSamples = c(500,500)
# MinAge = 0.2
# MaxAge = 20
# AgeStep = 1
# ObsAge = runif(nSamples, MinAge, MaxAge)
# Ref_ages = c(0.5,15)
# Growth_params = c(100,120,400,450,0.05,0.05,2,2)
# Growth_cv = c(0.1,0.1)
# Res=SimulateLengthAtAgeData(GrowthEqn, nSamples, nSexes, MinAge, MaxAge, AgeStep, Ref_ages, Growth_params, Growth_cv)
# # Fit Schnute growth curve to length at age data
# nSexes=2
# ObsAge=as.matrix(Res$ObsAge)
# ObsLen=as.matrix(Res$ObsLen)
# DataType=1  # 1=lengths at age data for individual fish, 2=mean length at age and sd data from mixture analysis
# params = c(log(c(130,125)),log(c(400,450)),0.05,0.05,2,2)
# t1=0.5
# t2=15
# ObsMeanLen=NA
# ObsMeanLensd=NA
# FittedRes=GetSchnuteGrowthResults(params, nSexes, DataType, t1, t2, ObsAge, ObsLen, ObsMeanLen=NA, ObsMeanLensd=NA)
# # Fit Schnute growth curve to mean length at age data
# DataType=2  # 1=lengths at age data for individual fish, 2=mean length at age and sd data from mixture analysis
# params = c(log(c(100,100)),log(c(400,450)),0.05,0.05,2,2)
# ObsAge=Res$ObsAgeCl
# FemObsMeanLen = Res$FemObsMeanLen
# MalObsMeanLen = Res$MalObsMeanLen
# ObsMeanLen = as.matrix(t(data.frame(FemObsMeanLen=FemObsMeanLen,MalObsMeanLen=MalObsMeanLen)))
# FemObsMeanLensd = Res$FemObsMeanLensd
# MalObsMeanLensd = Res$MalObsMeanLensd
# ObsMeanLensd = as.matrix(t(data.frame(FemObsMeanLensd=FemObsMeanLensd,MalObsMeanLensd=MalObsMeanLensd)))
# FittedRes=GetSchnuteGrowthResults(params, nSexes, DataType, t1, t2, ObsAge, ObsLen=NA, ObsMeanLen, ObsMeanLensd)
}
