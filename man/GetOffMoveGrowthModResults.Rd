% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WA_biology_methods.R
\name{GetOffMoveGrowthModResults}
\alias{GetOffMoveGrowthModResults}
\title{Fits growth model allowing for size-related movements of fish between 2 habitats}
\usage{
GetOffMoveGrowthModResults(
  params,
  SampleSize,
  ObsAges,
  ObsLengths,
  Habitat,
  lnL50MoveUp,
  lnL50MoveLw,
  lnSlopeMoveUp,
  lnSlopeMoveLw,
  lnLinfUp,
  lnLinfLw,
  lnvbKUp,
  lnvbKLw,
  tzeroLw,
  tzeroUp,
  CVLw,
  CVUp
)
}
\arguments{
\item{params}{input param values}

\item{SampleSize}{observed sample size for length/age/habitat data}

\item{ObsAges}{observed ages}

\item{ObsLengths}{observed lengths}

\item{Habitat}{observed habitat 0-first habitat, 1=final habitat}

\item{lnL50MoveUp}{upper bound movement parameter}

\item{lnL50MoveLw}{lower bound movement parameter}

\item{lnSlopeMoveUp}{upper bound movement parameter}

\item{lnSlopeMoveLw}{lower bound movement parameter}

\item{lnLinfUp}{upper bound growth parameter}

\item{lnLinfLw}{lower bound growth parameter}

\item{lnvbKUp}{upper bound growth parameter}

\item{lnvbKLw}{lower bound growth parameter}

\item{tzeroLw}{lower bound growth parameter}

\item{tzeroUp}{upper bound growth parameter}

\item{CVLw}{upper bound growth variation parameter}

\item{CVUp}{lower bound growth variation parameter}
}
\value{
nll, convergence, SampleSize, ParamEst, params, vcov.params, cor.params, IndivFishRes
}
\description{
This function growth model allowing for size-related movements of fish between 2 habitats,
(see Hesp et al., 2004)
}
\examples{
library(L3Assess)
library(WAFishBiology)
# simulate some standard length-at-age data
set.seed(123)
SampleSize=1000 # sample size for retained catches (and same number for released fish, if an MLL is specified)
MaxAge = 20
TimeStep = 1/12 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort = 4.22/12
FishMort = 0.1
MaxLen = 800
LenInc = 10
MLL=NA # (minimum legal length) # retention set to 1 for all lengths if MLL set to NA and retention parameters not specified
SelectivityType=2 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
SelectivityAtLen = NA # selectivity vector
SelParams = c(100, 20) # L50, L95-L50 for gear selectivity
RetenParams = c(NA, NA) # L50, L95-L50 for retention
DiscMort = 0 # proportion of fish that die due to natural mortality
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = 300
vbK = 0.5
CVSizeAtAge = 0.03
GrowthParams = c(Linf, vbK)
RefnceAges = NA
Res=SimLenAndAgeFreqData_EqMod(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
                               SelParams, RetenParams, SelectivityAtLen, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)

ObsAges = Res$ObsDecAgeRetCatch
ObsLengths = Res$ObsRandLenRetCatch
plot(ObsAges, ObsLengths, xlim=c(0,20), ylim=c(0,400))
# Assign each fish to inshore or offshore habitat
moveL50 = 200
moveSlope = 0.05
moveL95 = (log(19)/moveSlope) + moveL50
Habitat <- rep(0,SampleSize)
for (i in 1:SampleSize) {
  randnum = runif(1,0,1)
  tempProbOff = 1 / (1 + exp(-log(19) * (ObsLengths[i] - moveL50) / (moveL95 - moveL50)))
  if (randnum<tempProbOff) {
    Habitat[i] = 1
  } else {
    Habitat[i] = 0
  }
}
# Reduce relative sampling intensity in one area (selectivity offshore)
# at is unlikely that sampling will be of the same intensity in both habitats
x = which(Habitat==0)
y = which(Habitat==1)
RandAgeInsh = ObsAges[x]
RandAgeOff = ObsAges[y]
RandLenInsh = ObsLengths[x]
RandLenOff = ObsLengths[y]
y=which(Habitat==1)
length(y)
randnum=runif(length(y),0,1)
yy=which(randnum<0.25)
RandAgeOff = RandAgeOff[yy]
RandLenOff = RandLenOff[yy]
par(mfrow=c(2,2),mar=c(4,3,2,2))
plot(RandAgeInsh,RandLenInsh, xlim=c(0,20), ylim=c(0,500), col="red")
plot(RandAgeOff,RandLenOff, xlim=c(0,20), ylim=c(0,500), col="blue")
plot(RandAgeOff,RandLenOff, xlim=c(0,20), ylim=c(0,500), col="blue")
points(RandAgeInsh,RandLenInsh, col="red")
plot(RandAgeInsh,RandLenInsh, xlim=c(0,20), ylim=c(0,500), col="red")
points(RandAgeOff,RandLenOff, col="blue")
# Insh
lbnd=Res$lbnd
InshLenCat = trunc(RandLenInsh/10)*10
histdat = hist(InshLenCat, breaks=c(lbnd,800), plot=F)
InshLenFreq = histdat$counts
breaks = histdat$breaks
plot(lbnd,InshLenFreq,"l")
# Off
OffLenCat = trunc(RandLenOff/10)*10
histdat = hist(OffLenCat, breaks=c(lbnd,800), plot=F)
OffLenFreq = histdat$counts
breaks = histdat$breaks
lines(lbnd,OffLenFreq,"l",col="blue")
# plot lengths at specified ages. Lengths of fish in offshore habitat
# expected to be larger at younger ages
SpecAge = 1
lbnd=Res$lbnd
x=which(ObsAges >= SpecAge & ObsAges < SpecAge+1 & Habitat == 0)
InshLenCat = trunc(ObsLengths[x]/10)*10
histdat = hist(InshLenCat, breaks=c(lbnd,800), plot=F)
InshLenFreq = histdat$counts
breaks = histdat$breaks
x=which(ObsAges >= SpecAge & ObsAges < SpecAge+1 & Habitat == 1)
OffLenCat = trunc(ObsLengths[x]/10)*10
histdat = hist(OffLenCat, breaks=c(lbnd,800), plot=F)
OffLenFreq = histdat$counts
breaks = histdat$breaks
ymax=1.2*max(c(InshLenFreq, OffLenFreq))
plot(lbnd,InshLenFreq,"l",ylim=c(0,ymax))
lines(lbnd,OffLenFreq, col="blue")
# Fit size-related movement growth model
# set parameter bounds
lnL50MoveUp = log(300)
lnL50MoveLw = log(50)
lnSlopeMoveUp = log(0.5)
lnSlopeMoveLw = log(0.01)
lnLinfUp = log(350)
lnLinfLw = log(250)
lnvbKUp = log(0.8)
lnvbKLw = log(0.2)
tzeroLw = -5
tzeroUp = 1
CVLw = 0.02
CVUp = 0.15
# set starting values for parameters
InitmoveL50 = rnorm(1,200,20); InitmoveL50
InitmoveSlope = rnorm(1,0.05,0.002); moveSlope
InitLinf = rnorm(1,300,20); InitLinf
InitvbK = rnorm(1,0.5,0.05); InitvbK
Inittzero = rnorm(1,0,0.05); Inittzero
InitGrowthcv = rnorm(1,0.1,0.005); InitGrowthcv
params = c(log(InitmoveL50), log(InitmoveSlope),log(InitLinf), log(InitvbK), Inittzero,log(InitGrowthcv))
# fit model (takes a while, uses nlminb and Amoeba routine for optimisation)
FittedRes=GetOffMoveGrowthModResults(params, SampleSize, ObsAges, ObsLengths, Habitat, lnL50MoveUp, lnL50MoveLw,
                                     lnSlopeMoveUp, lnSlopeMoveLw, lnLinfUp, lnLinfLw, lnvbKUp, lnvbKLw,
                                     tzeroLw, tzeroUp, CVLw, CVUp)
# plot expected mean lengths at age for each habitat
par(mfrow=c(2,2),mar=c(5,4,2,2))
x=which(FittedRes$IndivFishRes$Habitat==0)
plot(FittedRes$IndivFishRes$ObsAges[x],FittedRes$IndivFishRes$ObsLengths[x], xlim=c(0,20), ylim=c(0,400),
     col="red",xlab="Age",ylab="Length",bty='n', cex.main=0.8, main="Juv Habitat")
points(FittedRes$IndivFishRes$ObsAges[x], FittedRes$IndivFishRes$ExpLen[x], col="black")

y=which(FittedRes$IndivFishRes$Habitat==1)
plot(FittedRes$IndivFishRes$ObsAges[y],FittedRes$IndivFishRes$ObsLengths[y], xlim=c(0,20), ylim=c(0,400),
     col="blue",xlab="Age",ylab="Length",bty='n', cex.main=0.8, main="Adult Habitat")
points(FittedRes$IndivFishRes$ObsAges[y], FittedRes$IndivFishRes$ExpLen[y], col="black")

plot(FittedRes$IndivFishRes$ObsAges[x], FittedRes$IndivFishRes$ExpLen[x], xlim=c(0,20), ylim=c(0,400),
     xlab="Age",ylab="Length",bty='n', col="red")
points(FittedRes$IndivFishRes$ObsAges[y], FittedRes$IndivFishRes$ExpLen[y], col="blue")
}
