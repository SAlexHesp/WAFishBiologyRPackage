% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WA_biology_methods.R
\name{GetLogisticMaturityCurveResults}
\alias{GetLogisticMaturityCurveResults}
\title{Get outputs from a fitted logistic maturity curve.}
\usage{
GetLogisticMaturityCurveResults(
  params,
  nSexes,
  LogisticModType,
  ObsLen,
  ObsAgeCl,
  ObsMatCat
)
}
\arguments{
\item{params}{c(L50,L95) length at 50 and 95 percent maturity (L50)}

\item{nSexes}{c(L50,L95) number of sexes}

\item{LogisticModType}{1=length-based, 2=age-based}

\item{ObsLen}{vector of observed lengths (set to NA for age model)}

\item{ObsAgeCl}{vector of observed age classes (set to NA for length model)}

\item{ObsMatCat}{vector of observed maturity categories (0=immature, 1=mature)}
}
\value{
negative log-likelihood (nll), nlminb convergence diagnostic (convergence), sample size (SampleSize)
maturity parameter estimates with lower and upper 95 percent confidence limits (ParamEst), point estimates
for growth parameters (params), variance-covariance matrix (vcov.params)
}
\description{
This function fits a logistic maturity curve to a sample of maturity-at-length data
by minimising the negative log-likelihood associated with the parameters and data, using nlminb.
It provides various statistical outputs in include convergence statistics,
parameter estimated and associated 95 percent confidence limits and associated variance-covariance matrix,
calculated using the MASS package.
}
\examples{
# generate synthetic length at maturity data
set.seed(123)
MaxAge = 20
MinLen = 0
MaxLen = 400
LenInc = 20
# single sex/combined sexes
nSexes = 1
nSamples = 300
Linf = 300
vbK = 0.3
tzero = 0
CVSizeAtAge = 0.1
GrowthParams = c(Linf, vbK, tzero, CVSizeAtAge)
L50 = 220
L95 = 270
Pmax = 1.0
Maturity_params = c(L50, L95, Pmax)
res=SimulateLengthAtMaturityData(nSamples, nSexes, MaxAge, MinLen, MaxLen, LenInc, GrowthParams, Maturity_params)
# fit model to synthetic data
ObsAgeCl=NA
ObsLen=res$ObsLen
ObsMatCat=res$ObsMatCat
LogisticModType = 1 # 1=length, 2=age
# 2 parameter model
InitL50 = 200
InitL95 = 250
params = c(InitL50, InitL95) # without Pmax parameter
res=GetLogisticMaturityCurveResults(params, nSexes, LogisticModType, ObsLen, ObsAgeCl, ObsMatCat) # get length-at-maturity results
# 3 parameter model
# InitL50 = 200
# InitL95 = 250
# InitPmax = 0.9
# InitPmax_logit = log(InitPmax/(1-InitPmax)) # logit transform
# params = c(InitPmax_logit, InitL50, InitL95) # with Pmax parameter
# res=GetLogisticMaturityCurveResults(params, nSexes, LogisticModType, ObsLen, ObsAgeCl, ObsMatCat) # get length-at-maturity results
# # separate sexes
# nSexes = 2
# nSamples = c(500,500)
# Linf = c(300,350)
# vbK = c(0.3,0.3)
# tzero = c(0,0)
# CVSizeAtAge = c(0.1,0.1)
# GrowthParams = c(Linf, vbK, tzero, CVSizeAtAge)
# L50 = c(200,220)
# L95 = c(240,250)
# Pmax = c(1,1)
# Maturity_params = c(L50, L95, Pmax)
# res=SimulateLengthAtMaturityData(nSamples, nSexes, MaxAge, MinLen, MaxLen, LenInc, GrowthParams, Maturity_params)
# ObsAgeCl=NA
# FemObsLen=res$FemObsLen
# MalObsLen=res$MalObsLen
# ObsLen = as.matrix(t(data.frame(FemObsLen=FemObsLen,MalObsLen=MalObsLen)))
# FemObsMatCat=res$FemObsMatCat
# MalObsMatCat=res$MalObsMatCat
# ObsMatCat = as.matrix(t(data.frame(FemObsMatCat=FemObsMatCat,MalObsMatCat=MalObsMatCat)))
# LogisticModType = 1 # 1=length, 2=age
# # 2 parameter model
# InitL50 = c(200, 220)
# InitL95 = c(250, 270)
# params = c(InitL50, InitL95) # without Pmax parameter
# res=GetLogisticMaturityCurveResults(params, nSexes, LogisticModType, ObsLen, ObsAgeCl, ObsMatCat) # get length-at-maturity results
# # 3 parameter model
# InitL50 = c(200, 220)
# InitL95 = c(250, 260)
# InitPmax = c(0.8, 0.8)
# InitPmax_logit = log(InitPmax/(1-InitPmax)) # logit transform
# params = c(InitPmax_logit, InitL50, InitL95) # with Pmax parameter
# res=GetLogisticMaturityCurveResults(params, nSexes, LogisticModType, ObsLen, ObsAgeCl, ObsMatCat) # get length-at-maturity results
# # age-at-maturity
# MinAge = 0
# MaxAge = 20
# nSexes = 1
# nSamples = 300
# A50 = 4
# A95 = 6
# Pmax = 1.0
# MaturityParams = c(A50, A95, Pmax)
# res=SimulateAgeAtMaturityData(nSamples, nSexes, MinAge, MaxAge, MaturityParams)
# ObsLen=NA
# ObsAgeCl=res$ObsAgeCl
# ObsMatCat=res$ObsMatCat
# LogisticModType = 2 # 1=length, 2=age
# # 2 parameter model
# InitA50 = 3
# InitA95 = 5
# params = c(InitA50, InitA95) # without Pmax parameter
# res=GetLogisticMaturityCurveResults(params, nSexes, LogisticModType, ObsLen, ObsAgeCl, ObsMatCat) # get age-at-maturity results
# # 3 parameter model
# InitA50 = 4.5
# InitA95 = 7
# InitPmax = 0.9
# InitPmax_logit = log(InitPmax/(1-InitPmax)) # logit transform
# params = c(InitPmax_logit, InitA50, InitA95) # with Pmax parameter
# res=GetLogisticMaturityCurveResults(params, nSexes, LogisticModType, ObsLen, ObsAgeCl, ObsMatCat) # get age-at-maturity results
# # separate sexes
# nSexes = 2
# nSamples = c(300,300)
# A50 = c(4,4.5)
# A95 = c(6,6)
# Pmax = c(1.0,1.0)
# MaturityParams = c(A50, A95, Pmax)
# res=SimulateAgeAtMaturityData(nSamples, nSexes, MinAge, MaxAge, MaturityParams)
# FemObsAgeCl=res$FemObsAgeCl
# MalObsAgeCl=res$MalObsAgeCl
# ObsAgeCl = as.matrix(t(data.frame(FemObsAgeCl=FemObsAgeCl,MalObsAgeCl=MalObsAgeCl)))
# FemObsMatCat=res$FemObsMatCat
# MalObsMatCat=res$MalObsMatCat
# ObsMatCat = as.matrix(t(data.frame(FemObsMatCat=FemObsMatCat,MalObsMatCat=MalObsMatCat)))
# # 2 parameter model
# InitA50 = c(3,3)
# InitA95 = c(5,5)
# params = c(InitA50, InitA95) # without Pmax parameter
# res=GetLogisticMaturityCurveResults(params, nSexes, LogisticModType, ObsLen, ObsAgeCl, ObsMatCat) # get age-at-maturity results
# # 3 parameter model
# InitA50 = c(4.5,4)
# InitA95 = c(7,7)
# InitPmax = c(0.9,0.9)
# InitPmax_logit = log(InitPmax/(1-InitPmax)) # logit transform
# params = c(InitPmax_logit, InitA50, InitA95) # with Pmax parameter
# res=GetLogisticMaturityCurveResults(params, nSexes, LogisticModType, ObsLen, ObsAgeCl, ObsMatCat) # get age-at-maturity results
}
