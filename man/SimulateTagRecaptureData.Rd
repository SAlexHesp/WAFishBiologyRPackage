% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WA_biology_methods.R
\name{SimulateTagRecaptureData}
\alias{SimulateTagRecaptureData}
\title{Simulate some tag-recapture data}
\usage{
SimulateTagRecaptureData(GrowthCrvChoice, nstep, nobs, MaxLen, params)
}
\arguments{
\item{GrowthCrvChoice}{1=double logistic model, 2=Gaussian function, 3=von Bertalanffy, 4=Gompertz}

\item{nstep}{number of numerical integration steps (higher number increases accuracy but reduces program speed)}

\item{nobs}{number of observations}

\item{MaxLen}{maximum length}

\item{params}{log(c(L50_1, L95_1, L50_2, L95_2)) double logistic model, or
log(c(Gaussian_A, Gaussian_u, Gaussian_sd)) Gaussian function, or log(c(vb_Linf, vb_K)) von Bertalanffy, or
log(c(Gomp_Linf, Gomp_G)) Gompertz}
}
\value{
simulated tag-recapture data for individuals animals, including random a set of initial lengths (Obs_Initlen),
final lengths (Obs_Finlen) and durations at liberty (Obs_delta_t), and the 'true' relationships (for two
durations at liberty), using for generating the random tag-recapture data.
}
\description{
Simulate tag-recapture data with varying times at liberty,
to which a growth curve may be fitted
}
\examples{
# Gausian
# Simulate data
set.seed(123)
nstep = 50 # number of steps for numerical integration
MaxLen = 300
Gaussian_A = 0.94
Gaussian_u = 55.33
Gaussian_sd = 53.17
StandDev = 10
GrowthCrvChoice = 2 # 1 = double logistic, 2 = Gaussian function, 3 = von Bertalanffy growth curve, 4 = Gompertz growth curve
params = log(c(Gaussian_A, Gaussian_u, Gaussian_sd, StandDev))
nobs = 200
res=SimulateTagRecaptureData(GrowthCrvChoice, nstep, nobs, MaxLen, params)
plot(res$Obs_Initlen, res$Obs_Finlen, pch=16, cex=0.6)
lines(res$Initlen_line, res$Exp_Finlen2, col="blue")
lines(res$Initlen_line2, res$Exp_Finlen3, col="blue")
#
# von Bertalanffy
# Simulate data
set.seed(123)
nstep = 100 # number of steps for numerical integration
MaxLen = 300
vb_Linf = 140
vb_K = 0.2
Stdev = 3
GrowthCrvChoice = 3 # 1 = double logistic, 2 = Gaussian function, 3 = von Bertalanffy growth curve, 4 = Gompertz growth curve
params = log(c(vb_Linf, vb_K, Stdev))
nobs = 1000
res=SimulateTagRecaptureData(GrowthCrvChoice, nstep, nobs, MaxLen, params)
plot(res$Initlen_line, res$Exp_Finlen2, col="blue", "l")
lines(res$Initlen_line2, res$Exp_Finlen3, col="blue")
lines(res$Obs_Initlen, res$Obs_Finlen, "p")
#
# Gompertz
# Simulate data
set.seed(123)
nstep = 100 # number of steps for numerical integration
MaxLen = 300
vb_Linf = 172
g = 0.35
Stdev = 5
GrowthCrvChoice = 4 # 1 = double logistic, 2 = Gaussian function, 3 = von Bertalanffy growth curve, 4 = Gompertz growth curve
params = log(c(vb_Linf, g, Stdev))
nobs = 200
res=SimulateTagRecaptureData(GrowthCrvChoice, nstep, nobs, MaxLen, params)
plot(res$Initlen_line, res$Exp_Finlen2, col="blue", "l")
lines(res$Initlen_line2, res$Exp_Finlen3, col="blue")
lines(res$Obs_Initlen, res$Obs_Finlen, "p")
#
# double logistic
# Simulate data
set.seed(123)
nstep = 50 # number of steps for numerical integration
MaxLen = 300
L50_1 = 46.48
L95_1 = 121.31
L50_2 = 121.91
L95_2 = 171.84
a = 0.113
StandDev = 5
GrowthCrvChoice = 1 # 1 = double logistic, 2 = Gaussian function, 3 = von Bertalanffy growth curve, 4 = Gompertz growth curve
params = log(c(L50_1, L95_1, L50_2, L95_2, a, StandDev))
nobs = 200
res=SimulateTagRecaptureData(GrowthCrvChoice, nstep, nobs, MaxLen, params)
plot(res$Obs_Initlen, res$Obs_Finlen, pch=16, cex=0.6)
lines(res$Initlen_line, res$Exp_Finlen2, col="blue")
lines(res$Initlen_line2, res$Exp_Finlen3, col="blue")
#
# inverse logistic
# Simulate data
set.seed(123)
nstep = 50 # number of steps for numerical integration
MaxLen = 300
L50 = 121.91
L95 = 171.84
a = 0.113
StandDev = 5
GrowthCrvChoice = 5 # 1 = double logistic, 2 = Gaussian function, 3 = von Bertalanffy growth curve,
# 4 = Gompertz growth curve, 5=inverse logistic
params = log(c(L50, L95, a, StandDev))
nobs = 200
res=SimulateTagRecaptureData(GrowthCrvChoice, nstep, nobs, MaxLen, params)
plot(res$Obs_Initlen, res$Obs_Finlen, pch=16, cex=0.6)
lines(res$Initlen_line, res$Exp_Finlen2, col="blue")
lines(res$Initlen_line2, res$Exp_Finlen3, col="blue")
}
