% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WA_biology_methods.R
\name{GetvonBertalanffyGrowthResults}
\alias{GetvonBertalanffyGrowthResults}
\title{Get statistical outputs from a fitted von Bertalanffy growth curve.}
\usage{
GetvonBertalanffyGrowthResults(
  params,
  nSexes,
  DataType,
  ObsAge,
  ObsLen,
  ObsMeanLen,
  ObsMeanLense
)
}
\arguments{
\item{params}{c(log(Linf),log(vbK),tzero) single or combined sex, or c(log(c(Linf,Linf)),log(c(vbK,vbK)),c(tzero,tzero))}

\item{nSexes}{1=single or combined sexes, 2=separate sexes}

\item{DataType}{# 1=lengths at age data for individual fish (single sex, or sexes recorded),
2=mean length at age and sd data from mixture analysis, 3=lengths at age data for individual fish
(two sex, sexes not recorded)}

\item{ObsAge}{observed ages}

\item{ObsLen}{observed lengths}

\item{ObsMeanLen}{mean lengths for specified ages (i.e. as estimated from mixture analysis)}

\item{ObsMeanLense}{se for mean estimated mean lengths for specified ages (i.e. as estimated from mixture analysis)}
}
\value{
negative log-likelihood (nll), nlminb convergence diagnostic (convergence)
sample size (SampleSize), growth parameter estimates with lower and upper 95%
confidence limits (ParamEst), point estimates for growth parameters (params)
and variance-covariance matrix (vcov.params)
}
\description{
This function fits a von Bertalanffy growth curve to a sample of fish length-at-age data
by minimising the negative log-likelihood associated with the parameters and data,
using nlminb. It provides various statistical outputs in include convergence statistics,
parameter estimated and associated 95% confidence limits and associated variance-covariance matrix,
calculated using the MASS package
}
\examples{
# von Bertalanffy growth equation
# simulate data (ignoring mortality and selectivity effects)
GrowthEqn = 1 # von Bertalanffy growth equation
nSexes = 1 # single or combined sex
nSamples = 300
MinAge = 1
MaxAge = 20
AgeStep = 1
Linf = 300
vbK = 0.3
tzero = 0
Growth_params = c(Linf, vbK, tzero)
Ref_ages = NA
Growth_cv = 0.08
Res = SimulateLengthAtAgeData(GrowthEqn, nSamples, nSexes, MinAge, MaxAge, AgeStep, Ref_ages, Growth_params, Growth_cv)
# fit growth model
DataType=1  # 1=lengths at age data for individual fish, 2=mean length at age and sd data from mixture analysis
params = c(log(400),log(0.3),0) # log(Linf), log(k), tzero
ObsAge = Res$ObsAge
ObsLen = Res$ObsLen
FittedRes=GetvonBertalanffyGrowthResults(params, nSexes, DataType, ObsAge, ObsLen, ObsMeanLen=NA, ObsMeanLense=NA)
DataType=2  # 1=lengths at age data for individual fish, 2=mean length at age and sd data from mixture analysis
params = c(log(400),log(0.3),0) # log(Linf), log(k), tzero
ObsAge = Res$ObsAgeCl
ObsMeanLen = Res$ObsMeanLen
ObsMeanLense = Res$ObsMeanLense
FittedRes=GetvonBertalanffyGrowthResults(params, nSexes, DataType, ObsAge, ObsLen=NA, ObsMeanLen, ObsMeanLense)
nSexes = 2 # Separate sexes
nSamples = c(300,200) # if different, order so NAs are last for smaller sample
MinAge = 1
MaxAge = 20
AgeStep = 1
Linf = c(300,250)
vbK = c(0.3,0.3)
tzero = c(0,0)
GrowthEqn = 1
Growth_params = c(Linf, vbK, tzero)
Ref_ages = NA
Growth_cv = c(0.08,0.08)
Res = SimulateLengthAtAgeData(GrowthEqn, nSamples, nSexes, MinAge, MaxAge, AgeStep, Ref_ages, Growth_params, Growth_cv)
# fit growth model
DataType=1  # 1=lengths at age data for individual fish, 2=mean length at age and sd data from mixture analysis
ObsAge = as.matrix(Res$ObsAge)
ObsLen = as.matrix(Res$ObsLen)
params = c(log(c(300,300)),log(c(0.3,0.3)),c(0,0)) # log(Linf), log(k), tzero
FittedRes=GetvonBertalanffyGrowthResults(params, nSexes, DataType, ObsAge, ObsLen, ObsMeanLen=NA, ObsMeanLense=NA)
DataType=2  # 1=lengths at age data for individual fish, 2=mean length at age and sd data from mixture analysis
params = c(log(c(300,300)),log(c(0.3,0.3)),c(0,0)) # log(Linf), log(k), tzero
ObsAge = Res$ObsAgeCl
FemObsMeanLen = Res$FemObsMeanLen
MalObsMeanLen = Res$MalObsMeanLen
ObsMeanLen = as.matrix(t(data.frame(FemObsMeanLen=FemObsMeanLen,MalObsMeanLen=MalObsMeanLen)))
FemObsMeanLense = Res$FemObsMeanLense
MalObsMeanLense = Res$MalObsMeanLense
ObsMeanLense = as.matrix(t(data.frame(FemObsMeanLense=FemObsMeanLense,MalObsMeanLense=MalObsMeanLense)))
FittedRes=GetvonBertalanffyGrowthResults(params, nSexes, DataType, ObsAge, ObsLen=NA, ObsMeanLen, ObsMeanLense)
# Simulate data for separate sexes, but fit model with 2 curves, where sex is not known
# 2 sexes
GrowthEqn = 1
nSamples = c(300,300)
nSexes = 2
MinAge = 1
MaxAge = 20
AgeStep = 1
Linf = c(400,500)
vbK = c(0.3,0.3)
tzero = c(0,0)
Growth_params = c(Linf,vbK,tzero)
Growth_cv = c(0.08,0.08)
Res = SimulateLengthAtAgeData(GrowthEqn, nSamples, nSexes, MinAge, MaxAge, AgeStep, Ref_ages, Growth_params, Growth_cv)
# plot lengths at age
for (i in 1:nSexes) {
  ObsAge=as.vector(unlist(Res$ObsAge[i,]))
  ObsLen=as.vector(unlist(Res$ObsLen[i,]))
  if (i==1) {
    plot(ObsAge, ObsLen, ylim=c(0,800))
  } else {
    points(ObsAge, ObsLen, col="blue")
  }
}
ObsAge=c(as.vector(unlist(Res$ObsAge[1,])),as.vector(unlist(Res$ObsAge[2,])))
ObsLen=c(as.vector(unlist(Res$ObsLen[1,])),as.vector(unlist(Res$ObsLen[2,])))
DataType=3  # 1=lengths at age data for individual fish, 2=mean length at age and sd data from mixture analysis
nSexes = 2 # separate sexes, but sex unknown
# note, model has 7, not 6 params, with estimated sd, to distinguish this from standard model
# params = c(log(c(250,800)),log(c(0.3,0.3)),c(0,0), log(20)) # log(Linf), log(k), tzero, common sd
# params = c(log(c(250,800)),log(0.3),c(0,0), log(20)) # log(Linf), log(k), tzero, common sd
params = c(log(c(250,800)),log(0.3),0, log(20)) # log(Linf), log(k), tzero, common sd
FittedRes=GetvonBertalanffyGrowthResults(params, nSexes, DataType, ObsAge, ObsLen, ObsMeanLen=NA, ObsMeanLense=NA)
FittedRes$ParamEst
}
