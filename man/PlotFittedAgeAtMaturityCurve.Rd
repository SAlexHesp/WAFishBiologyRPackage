% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WA_biology_methods.R
\name{PlotFittedAgeAtMaturityCurve}
\alias{PlotFittedAgeAtMaturityCurve}
\title{Plot fitted logistic curve to fish maturity-at-age data.}
\usage{
PlotFittedAgeAtMaturityCurve(
  params,
  CurveType,
  nSexes,
  ObsAgeCl,
  ObsMatCat,
  AgeCl,
  PropMat,
  AgeClSampSize,
  plotages,
  xmax,
  xint,
  GraphTitle,
  xaxis_lab,
  yaxis_lab,
  SampSizelab_cex,
  ShowSampSizes,
  ShowLegend,
  PlotCLs,
  ErrOpt
)
}
\arguments{
\item{params}{age-based logistic maturity curve parameters}

\item{CurveType}{1=symmetric, 2=asymmetric}

\item{nSexes}{number of sexes}

\item{ObsAgeCl}{vector of observed age classes}

\item{ObsMatCat}{vector of observed maturity categories (0=immature, 1=mature)}

\item{AgeCl}{vector of observed age classes}

\item{PropMat}{proportion mature in age classes}

\item{AgeClSampSize}{vector of observed sample sizes for observed age classes}

\item{plotages}{ages for plotting}

\item{xmax}{x axis maximum}

\item{xint}{x axis interval}

\item{GraphTitle}{graph title}

\item{xaxis_lab}{x axis label}

\item{yaxis_lab}{y axis label}

\item{SampSizelab_cex}{font size for sample size labels}

\item{ShowSampSizes}{logical (set to TRUE to show sample size labels)}

\item{PlotCLs}{logical (set to TRUE to show 95 percent confidence limits for curve)}

\item{ErrOpt}{method for uncertainty calculation (1=varcov approx, 2=bootstrap)}
}
\description{
This function fits a logistic maturity curve to maturity-at-age data. Various plotting
options provided.
}
\examples{
# plot model fitted to single sex/combined sexes
# generate synthetic data
MinAge = 0
MaxAge = 20
nSexes = 1
nSamples = 500
CurveType = 1
A50 = 4
A95 = 6
Pmax = 1.0
MaturityParams = c(A50, A95, Pmax)
res=SimulateAgeAtMaturityData(nSamples, CurveType, nSexes, MinAge, MaxAge, MaturityParams)
AgeCl = res$AgeClasses
PropMat = res$PropMat
AgeClSampSize=res$AgeClSampSize
ObsAgeCl=res$ObsAgeCl
ObsMatCat=res$ObsMatCat
LogisticModType = 2 # 1=length, 2=age
ErrOpt = 1 # 1=varcov approx, 2=bootstrap
plotages=res$plotages
# 2 parameter model
InitA50 = 3
InitA95 = 5
params = c(InitA50, InitA95) # without Pmax parameter
PlotFittedAgeAtMaturityCurve(params, CurveType, nSexes, ObsAgeCl, ObsMatCat, AgeCl, PropMat, AgeClSampSize, plotages,
                             xmax=20, xint=2, GraphTitle=NA, xaxis_lab=NA, yaxis_lab=NA, SampSizelab_cex = NA,
                             ShowSampSizes=FALSE, ShowLegend=FALSE, PlotCLs=FALSE, ErrOpt)
# plot model fitted to separate sexes (simultaneously)
# generate synthetic data
MinAge = 0
MaxAge = 20
nSexes = 2
nSamples = c(500,500)
CurveType = 1
A50 = c(4,4.5)
A95 = c(6,6.5)
Pmax = c(1.0,1.0)
MaturityParams = c(A50, A95, Pmax)
res=SimulateAgeAtMaturityData(nSamples, CurveType, nSexes, MinAge, MaxAge, MaturityParams)
AgeCl = res$AgeClasses
FemObsAgeCl=res$FemObsAgeCl
MalObsAgeCl=res$MalObsAgeCl
ObsAgeCl = as.matrix(t(data.frame(FemObsAgeCl=FemObsAgeCl,MalObsAgeCl=MalObsAgeCl)))
FemObsMatCat=res$FemObsMatCat
MalObsMatCat=res$MalObsMatCat
ObsMatCat = as.matrix(t(data.frame(FemObsMatCat=FemObsMatCat,MalObsMatCat=MalObsMatCat)))
# 2 parameter model
InitA50 = c(3,3)
InitA95 = c(5,5)
params = c(InitA50, InitA95) # without Pmax parameter
LogisticModType=2
ErrOpt = 1 # 1=varcov approx, 2=bootstrap
plotages=res$Femplotages # plotting routine assumes the same age range for females and males
FemPropMat=res$FemPropMat
MalPropMat=res$MalPropMat
PropMat = as.matrix(t(data.frame(FemPropMat=FemPropMat,MalPropMat=MalPropMat)))
FemAgeClSampSize=res$FemAgeClSampSize
MalAgeClSampSize=res$MalAgeClSampSize
AgeClSampSize = as.matrix(t(data.frame(FemAgeClSampSize=FemAgeClSampSize,MalAgeClSampSize=MalAgeClSampSize)))
PlotFittedAgeAtMaturityCurve(params, CurveType, nSexes, ObsAgeCl, ObsMatCat, AgeCl, PropMat, AgeClSampSize, plotages,
                             xmax=20, xint=2, GraphTitle=NA, xaxis_lab=NA, yaxis_lab=NA, SampSizelab_cex = NA,
                             ShowSampSizes=FALSE, ShowLegend=FALSE, PlotCLs=FALSE, ErrOpt)
# generate synthetic age at maturity data, single sex, 3 parameter model
set.seed(144)
MinAge = 0
MaxAge = 20
nSexes = 1
nSamples = 500
CurveType = 2 # 1 = symmetric logistic, 2 = asymmetric logistic
Q = 1 # controls spread
B = 5 # inflection point
V = 2 # controls skew or asymmetry
Pmax = 1
MaturityParams = c(Q,B,V,Pmax)
res=SimulateAgeAtMaturityData(nSamples, CurveType, nSexes, MinAge, MaxAge, MaturityParams)
ObsLen=NA
ObsAgeCl=res$ObsAgeCl
ObsMatCat=res$ObsMatCat
LogisticModType = 2 # 1=length, 2=age
ErrOpt = 1 # 1=varcov approx, 2=bootstrap
InitQ = 2 # related to y(0) value
InitB = 6 # the growth rate
InitV = 3 # affects near which asymptote maximum growth occurs
params = c(log(InitQ), InitB, log(InitV)) # without Pmax parameter
Res=GetLogisticMaturityCurveResults(params, nSexes, LogisticModType, CurveType, ObsLen, ObsAgeCl, ObsMatCat, ErrOpt) # get age-at-maturity results
Res$ParamEst
AgeCl = res$AgeClasses
PropMat = res$PropMat
AgeClSampSize=res$AgeClSampSize
plotages = seq(MinAge, MaxAge, 0.1)
PlotFittedAgeAtMaturityCurve(params, CurveType, nSexes, ObsAgeCl, ObsMatCat, AgeCl, PropMat, AgeClSampSize, plotages,
                             xmax=20, xint=2, GraphTitle=NA, xaxis_lab=NA, yaxis_lab=NA, SampSizelab_cex = 0.8,
                             ShowSampSizes=TRUE, ShowLegend=FALSE, PlotCLs=TRUE, ErrOpt)
}
