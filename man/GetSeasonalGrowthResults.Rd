% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WA_biology_methods.R
\name{GetSeasonalGrowthResults}
\alias{GetSeasonalGrowthResults}
\title{Get outputs from a fitted seasonal growth curve.}
\usage{
GetSeasonalGrowthResults(
  params,
  nSexes,
  DataType,
  ObsAge,
  ObsLen,
  ObsMeanLen,
  ObsMeanLense
)
}
\arguments{
\item{params}{c(log(Linf), log(vbK), tzero, tc, C)}

\item{nSexes}{number of sexes}

\item{DataType}{1=lengths at age data for individual fish, 2=mean length at age and sd data from mixture analysis}

\item{ObsAge}{observed ages}

\item{ObsLen}{observed lengths}

\item{ObsMeanLen}{mean lengths for specified ages (i.e. as estimated from mixture analysis)}

\item{ObsMeanLense}{se for mean estimated mean lengths for specified ages (i.e. as estimated from mixture analysis)}
}
\value{
negative log-likelihood (nll)
nlminb convergence diagnostic (convergence)
sample size (SampleSize)
growth parameter estimates with lower and upper 95% confidence limits (ParamEst)
point estimates for growth parameters (params)
variance-covariance matrix (vcov.params)
}
\description{
This function fits Somers (1988) seasonal growth curve to a sample of fish length-at-age data
by minimising the negative log-likelihood associated with the parameters and data,
using nlminb. It provides various statistical outputs in include convergence statistics,
parameter estimated and associated 95% confidence limits and associated variance-covariance matrix,
calculated using the MASS package.
}
\examples{
# Seasonal growth curve
# simulate data (ignoring mortality and selectivity effects)
GrowthEqn=3 # Seasonal growth curve
nSexes=1 # single or combined sex
nSamples = 1000
MinAge = 0
MaxAge = 3
AgeStep = 1/12
Linf = 150
vbK = 1
tzero = 0
tc = 0.25
C = 0.8
Ref_ages=NA
Growth_params=c(Linf,vbK,tzero,tc,C)
Growth_cv = 0.1
Res=SimulateLengthAtAgeData(GrowthEqn, nSamples, nSexes, MinAge, MaxAge, AgeStep, Ref_ages, Growth_params, Growth_cv)
# fit growth model
DataType = 1
nSexes=1
ObsAge = Res$ObsAge
ObsLen = Res$ObsLen
ObsMeanLen=NA
ObsMeanLense=NA
params = c(log(160),log(0.8),0,0.25,0.8) #Linf, vbK, tzero, tc, C
# fit seasonal growth curve to mean length at age data
FittedRes=GetSeasonalGrowthResults(params, nSexes, DataType, ObsAge, ObsLen, ObsMeanLen, ObsMeanLense)
# DataType=2  # 1=lengths at age data for individual fish, 2=mean length at age and sd data from mixture analysis
# params = c(log(160),log(0.8),0,0.25,0.8) #Linf, vbK, tzero, tc, C
# ObsAge=Res$ObsAgeCl
# ObsMeanLen=Res$ObsMeanLen
# ObsMeanLense=Res$ObsMeanLense
# FittedRes=GetSeasonalGrowthResults(params, nSexes, DataType, ObsAge, ObsLen, ObsMeanLen, ObsMeanLense)
# GrowthEqn=3 # Seasonal growth curve
# nSexes=2 # separate sexes
# nSamples = c(500,500)
# MinAge = 0
# MaxAge = 3
# AgeStep = 1/12
# Linf = c(150,160)
# vbK = c(1,1)
# tzero = c(0,0)
# tc = c(0.25,0.25)
# C = c(0.8,0.8)
# Ref_ages=NA
# Growth_params=c(Linf,vbK,tzero,tc,C)
# Growth_cv = c(0.1,0.1)
# Res=SimulateLengthAtAgeData(GrowthEqn, nSamples, nSexes, MinAge, MaxAge, AgeStep, Ref_ages, Growth_params, Growth_cv)
# # fit growth model
# DataType = 1
# nSexes=2
# ObsAge=as.matrix(Res$ObsAge)
# ObsLen=as.matrix(Res$ObsLen)
# ObsMeanLen=NA
# ObsMeanLense=NA
# params = c(log(c(160,150)),log(c(0.8,0.8)),c(0,0),c(0.25,0.25),c(0.8,0.8)) #Linf, vbK, tzero, tc, C
# # fit seasonal growth curve to mean length at age data
# FittedRes=GetSeasonalGrowthResults(params, nSexes, DataType, ObsAge, ObsLen, ObsMeanLen, ObsMeanLense)
# DataType=2  # 1=lengths at age data for individual fish, 2=mean length at age and sd data from mixture analysis
# params = c(log(c(160,150)),log(c(0.8,0.8)),c(0,0),c(0.25,0.25),c(0.8,0.8)) #Linf, vbK, tzero, tc, C
# ObsAge=Res$ObsAgeCl
# FemObsMeanLen = Res$FemObsMeanLen
# MalObsMeanLen = Res$MalObsMeanLen
# ObsMeanLen = as.matrix(t(data.frame(FemObsMeanLen=FemObsMeanLen,MalObsMeanLen=MalObsMeanLen)))
# FemObsMeanLense = Res$FemObsMeanLense
# MalObsMeanLense = Res$MalObsMeanLense
# ObsMeanLense = as.matrix(t(data.frame(FemObsMeanLense=FemObsMeanLense,MalObsMeanLense=MalObsMeanLense)))
# FittedRes=GetSeasonalGrowthResults(params, nSexes, DataType, ObsAge, ObsLen=NA, ObsMeanLen, ObsMeanLense)
}
