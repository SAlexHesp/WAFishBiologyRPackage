FishLen=FishLen,
GonadWt=GonadWt,
FishWt=FishWt)
# subset data for females above our guess at size at maturity
newGSIdat = GSIdat[GSIdat$FishLen>=MatL50,]
# calculate GSIs for individual fish
newGSIdat$GSI = (newGSIdat$GonadWt / newGSIdat$FishWt) * 100
# monthly means
temp <- aggregate(GSI ~ MM, newGSIdat, FUN=mean)
MM = temp[,1]
MeanGSI = temp[,2]
# monthly counts
temp <- aggregate(GSI ~ MM, newGSIdat, FUN=length)
nGSI = temp[,2]
# monthly standard deviations
temp <- aggregate(GSI ~ MM, newGSIdat, FUN=sd)
sdGSI = temp[,2]
# create single data frame with desired fields
Result <- data.frame(MM=MM,
MeanGSI=MeanGSI,
sdGSI=sdGSI,
nGSI=nGSI)
# calculate standard error
Result$seGSI <- Result$MeanGSI / sqrt(Result$nGSI)
# calculate lower and upper 95% CLS, assuming GSI data normally distributed
Result$Low95GSI <- Result$MeanGSI - (1.96 * Result$seGSI)
Result$Up95GSI <- Result$MeanGSI + (1.96 * Result$seGSI)
return(Result)
}
#' # generate some GSI data
set.seed(123)
nMnths = 12
MnthSampeSizes = 20
MMSampSize = rep(MnthSampeSizes,nMnths)
TotSampSize = MnthSampeSizes * nMnths
Mnths = 1:nMnths
MeanMMGSI = rep(c(rep(0.1,4),0.25, 0.7, 0.6, 0.3, rep(0.1,4)),MMSampSize)
randMMGSI = rnorm(TotSampSize,MeanMMGSI,0.1)
length(randMMGSI)
MM = rep(Mnths,times=MMSampSize)
FishLen = round(runif(TotSampSize,100,500),0)
FishWt = (0.0000001 * FishLen ^ 3)
GonadWt = (randMMGSI / 100) * FishWt
MatL50 = 200
# calculate mean monthly GSIs and associated errors
CalcMeanMonthlyGSIs(MatL50, MM, FishLen, GonadWt, FishWt)
CalcMeanMonthlyGSIs <- function(MatL50, MM, FishLen, GonadWt, FishWt) {
# calculate mean monthly GSIs, and associated 95% CLs
GSIdat = data.frame(MM=MM,
FishLen=FishLen,
GonadWt=GonadWt,
FishWt=FishWt)
# subset data for females above our guess at size at maturity
newGSIdat = GSIdat[GSIdat$FishLen>=MatL50,]
# calculate GSIs for individual fish
newGSIdat$GSI = (newGSIdat$GonadWt / newGSIdat$FishWt) * 100
# monthly means
temp <- aggregate(GSI ~ MM, newGSIdat, FUN=mean)
MM = temp[,1]
MeanGSI = temp[,2]
# monthly counts
temp <- aggregate(GSI ~ MM, newGSIdat, FUN=length)
nGSI = temp[,2]
# monthly standard deviations
temp <- aggregate(GSI ~ MM, newGSIdat, FUN=sd)
sdGSI = temp[,2]
# create single data frame with desired fields
Result <- data.frame(MM=MM,
MeanGSI=MeanGSI,
sdGSI=sdGSI,
nGSI=nGSI)
# calculate standard error
Result$seGSI <- Result$MeanGSI / sqrt(Result$nGSI)
# calculate lower and upper 95% CLS, assuming GSI data normally distributed
Result$Low95GSI <- Result$MeanGSI - (1.96 * Result$seGSI)
Result$Up95GSI <- Result$MeanGSI + (1.96 * Result$seGSI)
return(Result)
}
#' # generate some GSI data
set.seed(123)
nMnths = 12
MnthSampeSizes = 20
MMSampSize = rep(MnthSampeSizes,nMnths)
TotSampSize = MnthSampeSizes * nMnths
Mnths = 1:nMnths
MeanMMGSI = rep(c(rep(0.1,4),0.25, 0.7, 0.6, 0.3, rep(0.1,4)),MMSampSize)
randMMGSI = rnorm(TotSampSize,MeanMMGSI,0.1)
length(randMMGSI)
MM = rep(Mnths,times=MMSampSize)
FishLen = round(runif(TotSampSize,100,500),0)
FishWt = (0.0000001 * FishLen ^ 3)
GonadWt = (randMMGSI / 100) * FishWt
MatL50 = 200
CalcMeanMonthlyGSIs(MatL50, MM, FishLen, GonadWt, FishWt)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
install.packages("C:/~/WAFishBiology_0.1.0.tar.gz", source = TRUE, repos=NULL)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
install.packages("C:/~/WAFishBiology_0.1.0.tar.gz", source = TRUE, repos=NULL)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
install.packages("rmarkdown")
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
params
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
install.packages("C:/~/WAFishBiology_0.1.0.tar.gz", source = TRUE, repos=NULL)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
# Simulate fish length at age data, and mean length at age data from von
# Bertalanffy growth curve
# install.packages("C:/~/WAFishBiology_0.1.0.tar.gz", source = TRUE, repos=NULL)
library(WAFishBiology)
# Seasonal growth curve
# Simulate data
GrowthEqn=3 # Seasonal growth curve
nSexes=1 # single or combined sex
nSamples = 500
# TimeStep = 1/12
# MinAge = 2 * TimeStep
MinAge = 0
MaxAge = 5
Linf = 150
vbK = 1
tzero = 0
tc = 0.25
C = 0.8
Ref_ages=NA
Growth_params=c(Linf,vbK,tzero,tc,C)
Growth_cv = 0.1
Res=SimulateLengthAtAgeData(GrowthEqn, nSamples, nSexes, MinAge, MaxAge, Ref_ages, Growth_params, Growth_cv)
# fit growth model and plot
DataType = 1
nSexes=1
ObsAge = Res$ObsAge
ObsLen = Res$ObsLen
ObsMeanLen=NA
ObsMeanLensd=NA
params = c(log(160),log(0.8),0,0.25,0.8) #Linf, vbK, tzero, tc, C
# fit seasonal growth curve to mean length at age data
FittedRes=GetSeasonalGrowthResults(params, DataType, ObsAge, ObsLen, ObsMeanLen, ObsMeanLensd)
plotages=seq(0, MaxAge,0.1)
PlotFittedGrowthCurve(DataType,  GrowthEqn, ObsAge, ObsLen, ObsMeanLen=NA, ObsMeanLensd=NA,
params, Ref_ages, plotages, ymax=200, xmax=NA, yint=50, xint=NA, GraphTitle=NA,
xaxis_lab=NA, yaxis_lab=NA, PlotCLs=T, FittedRes)
DataType=2  # 1=lengths at age data for individual fish, 2=mean length at age and sd data from mixture analysis
params = c(log(160),log(0.8),0,0.25,0.8) #Linf, vbK, tzero, tc, C
ObsAge=Res$ObsAgeCl
ObsMeanLen=Res$ObsMeanLen
ObsMeanLensd=Res$ObsMeanLensd
FittedRes=GetSeasonalGrowthResults(params, DataType, ObsAge, ObsLen=NA, ObsMeanLen, ObsMeanLensd)
plotages=seq(0, MaxAge,0.1)
PlotFittedGrowthCurve(DataType,  GrowthEqn, ObsAge, ObsLen=NA, ObsMeanLen, ObsMeanLensd,
params, Ref_ages, plotages, ymax=200, xmax=NA, yint=50, xint=NA, GraphTitle=NA,
xaxis_lab=NA, yaxis_lab=NA, PlotCLs=F, FittedRes)
GrowthEqn=3 # Seasonal growth curve
nSexes=1 # single or combined sex
nSamples = 500
# TimeStep = 1/12
# MinAge = 2 * TimeStep
MinAge = 0
MaxAge = 5
Linf = 150
vbK = 1
tzero = 0
tc = 0.25
C = 0.8
Ref_ages=NA
Growth_params=c(Linf,vbK,tzero,tc,C)
Growth_cv = 0.1
Res=SimulateLengthAtAgeData(GrowthEqn, nSamples, nSexes, MinAge, MaxAge, Ref_ages, Growth_params, Growth_cv)
# fit growth model and plot
DataType = 1
nSexes=1
ObsAge = Res$ObsAge
ObsLen = Res$ObsLen
ObsMeanLen=NA
ObsMeanLensd=NA
params = c(log(160),log(0.8),0,0.25,0.8) #Linf, vbK, tzero, tc, C
# fit seasonal growth curve to mean length at age data
FittedRes=GetSeasonalGrowthResults(params, DataType, ObsAge, ObsLen, ObsMeanLen, ObsMeanLensd)
plotages=seq(0, MaxAge,0.1)
PlotFittedGrowthCurve(DataType,  GrowthEqn, ObsAge, ObsLen, ObsMeanLen=NA, ObsMeanLensd=NA,
params, Ref_ages, plotages, ymax=200, xmax=NA, yint=50, xint=NA, GraphTitle=NA,
xaxis_lab=NA, yaxis_lab=NA, PlotCLs=T, FittedRes)
DataType=2  # 1=lengths at age data for individual fish, 2=mean length at age and sd data from mixture analysis
params = c(log(160),log(0.8),0,0.25,0.8) #Linf, vbK, tzero, tc, C
ObsAge=Res$ObsAgeCl
ObsMeanLen=Res$ObsMeanLen
ObsMeanLensd=Res$ObsMeanLensd
FittedRes=GetSeasonalGrowthResults(params, DataType, ObsAge, ObsLen=NA, ObsMeanLen, ObsMeanLensd)
plotages=seq(0, MaxAge,0.1)
ObsAge
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
install.packages("C:/~/WAFishBiology_0.1.0.tar.gz", source = TRUE, repos=NULL)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
install.packages("C:/~/WAFishBiology_0.1.0.tar.gz", source = TRUE, repos=NULL)
# simulate age and length data
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
install.packages("C:/~/WAFishBiology_0.1.0.tar.gz", source = TRUE, repos=NULL)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
install.packages("C:/~/L3Assess_0.1.0.tar.gz", source = TRUE, repos=NULL)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
library(WAFishBiology)
